<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 账户信息mapper -->
<mapper namespace="com.yf.pet.dao.user.AccountDao">
    <!-- 用户账户map对象 -->
    <resultMap id="UserAccountMap" type="com.yf.pet.entity.user.Account">
        <result column="user_id" property="userId"/>
        <result column="mobile" property="mobile"/>
        <result column="email" property="email"/>
        <result column="facebook_id" property="facebookId"/>
        <result column="facebook_name" property="facebookName"/>
        <result column="weixin_id" property="weixinId"/>
        <result column="weixin_name" property="weixinName"/>
        <result column="pwd" property="pwd"/>
        <result column="access_token" property="accessToken"/>
        <result column="validity_date" property="validityDate"/>
        <result column="register_type" property="registerType"/>
        <result column="client_type" property="clientType"/>
        <result column="login_type" property="loginType"/>
        <result column="ip_address" property="ipAddress"/>
        <result column="create_date" property="createDate"/>
        <result column="update_date" property="updateDate"/>
        <result column="activate_status" property="activateStatus"/>
    </resultMap>

    <!-- 新增用户账户信息 -->
    <insert id="addAccount" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO
        t_user(user_id,mobile,email,facebook_id,facebook_name,weixin_id,weixin_name,pwd,access_token,validity_date,
        register_type,client_type,login_type,ip_address,create_date,activate_status)
        VALUES(#{userId},#{mobile},#{email},#{facebookId},#{facebookName},#{weixinId},#{weixinName},#{pwd},#{accessToken},
        #{validityDate},#{registerType},#{clientType},#{loginType},#{ipAddress},#{createDate},#{activateStatus})
	</insert>

    <!--修改用户帐号信息-->
    <update id="updateAccount">
        UPDATE t_user
        <set>
            <if test="mobile != null and mobile != '' ">
                mobile=#{mobile},
            </if>
            <if test="email != null and email != '' ">
                email=#{email},
            </if>
            <if test="facebookId != null and facebookId != '' ">
                facebook_id=#{facebookId},
            </if>
            <if test="weixinId != null and weixinId != '' ">
                weixin_id=#{weixinId},
            </if>
        </set>
        <where>
            user_id = #{userId}
        </where>
    </update>

    <!--更新用户token信息,登录时候更新-->
    <update id="updateAccountToken">
        UPDATE t_user
        SET access_token = #{accessToken},
        validity_date = #{validityDate},
        login_type = #{loginType}
        WHERE user_id=#{userId}
    </update>

    <sql id="common_fields">
        user_id,mobile,email,facebook_id,weixin_id,weixin_name,facebook_name,access_token,validity_date,client_type,create_date,
        register_type,login_type,activate_status
    </sql>

    <!--根据用户id查询帐号信息-->
    <select id="findAccountByUserId" resultMap="UserAccountMap">
        SELECT
        <include refid="common_fields"/>
        FROM t_user
        WHERE user_id=#{userId}
    </select>
    <!--根据用户id查询帐号信息-->
    <select id="findAccountByEmail" resultMap="UserAccountMap">
        SELECT
        <include refid="common_fields"/>
        FROM t_user
        WHERE email=#{email}
    </select>

    <!--查看帐号是否已经被注册-->
    <select id="findAccountIsExist" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM t_user
        <where>
            <if test="mobile != null and mobile !='' ">
                OR mobile = #{mobile}
            </if>
            <if test="email != null and email !='' ">
                OR email = #{email}
            </if>
            <if test="facebookId != null and facebookId !='' ">
                OR facebook_id = #{facebookId}
            </if>
            <if test="weixinId != null and weixinId !='' ">
                OR weixin_id = #{weixinId}
            </if>
        </where>
    </select>

    <!--根据帐号和帐号类型查看帐号是否已经被注册-->
    <select id="findAccountIsExistByAccountType" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM t_user
        <where>
            <choose>
                <when test="accountType == 1">
                    mobile = #{account}
                </when>
                <when test="accountType == 2">
                    email = #{account}
                </when>
                <when test="accountType == 3">
                    facebook_id = #{account}
                </when>
                <when test="accountType == 4">
                    weixin_id = #{account}
                </when>
            </choose>
        </where>
    </select>

    <!--查询电话号码是否已经注册-->
    <select id="findMobileIsExist" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM t_user
        WHERE mobile = #{mobile}
    </select>

    <!--查询邮箱地址是否已经注册-->
    <select id="findEmailIsExist" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM t_user
        WHERE email = #{email}
    </select>

    <sql id="fields_filter_summary">
        user_id,mobile,email,facebook_id,weixin_id,weixin_name,facebook_name,pwd
    </sql>

    <!--根据mobile或者email查询用户userId 登录是验证帐号密码是否正确。一次登录方式只能是mobile或者email,-->
    <select id="findAccountByMobileOrEmailAndPwd" resultMap="UserAccountMap">
        SELECT
        <include refid="fields_filter_summary"/>
        FROM t_user
        <where>
            <if test="mobile != null and mobile != ''">
                AND mobile = #{mobile}
            </if>
            <if test="email != null and email != ''">
                AND email = #{email}
            </if>
        </where>
    </select>

    <!--根据mobile或者email查询用户userId -->
    <select id="findUserIdByMobileOrEmail" resultType="java.lang.Long">
        SELECT user_id
        FROM t_user
        <where>
            <if test="mobile != null and mobile != ''">
                AND mobile = #{mobile}
            </if>
            <if test="email != null and email != ''">
                AND email = #{email}
            </if>
        </where>
    </select>

    <!--根据OpenId查询用户userId 登录时验证openId是否正确, openId登录不能同时传facebookId和-->
    <select id="findAccountByOpenId" resultMap="UserAccountMap">
        SELECT
        <include refid="fields_filter_summary"/>
        FROM t_user
        <where>
            <if test="facebookId != null and facebookId != ''">
                AND facebook_id = #{facebookId}
            </if>
            <if test="weixinId != null and weixinId != ''">
                AND weixin_id = #{weixinId}
            </if>
        </where>
    </select>

    <!--查询用户帐号概要信息-->
    <select id="findAccountSummary" resultMap="UserAccountMap">
        SELECT
        <include refid="fields_filter_summary"/>
        FROM t_user
        <where>
            <choose>
                <when test="accountType == 1">
                    mobile = #{account}
                </when>
                <when test="accountType == 2">
                    email = #{account}
                </when>
                <when test="accountType == 3">
                    facebook_id = #{account}
                </when>
                <otherwise>
                    weixin_id = #{account}
                </otherwise>
            </choose>
        </where>
    </select>

    <!--验证accessToken是否有效-->
    <select id="findAccessTokenIsValid" resultMap="UserAccountMap">
        SELECT user_id,access_token,validity_date FROM t_user
        WHERE access_token = #{accessToken}
    </select>
    <!--根据accessToken查询用户信息-->
    <select id="findAccountByAccessToken" resultMap="UserAccountMap">
        SELECT
        <include refid="common_fields"/>
        FROM t_user
        WHERE access_token = #{accessToken}
    </select>
    <!--根据accessToken查询用户信息包括密码-->
    <select id="findAccountAndPwdByAccessToken" resultMap="UserAccountMap">
        SELECT
        <include refid="common_fields"/>,pwd
        FROM t_user
        WHERE access_token = #{accessToken}
    </select>

    <!--用户登出是修改帐号token信息-->
    <update id="updateAccessTokenByLogout">
        UPDATE t_user
        SET access_token = null,
        validity_date = null
        WHERE access_token = #{accessToken}
    </update>

    <!--帐号绑定,如果已经绑定过,就不能再绑定-->
    <update id="bindAccount">
        UPDATE t_user
        <set>
            <choose>
                <when test="accountType ==1">
                    mobile = #{account},
                </when>
                <when test="accountType ==2">
                    email = #{account},
                </when>
                <when test="accountType ==3">
                    facebook_id = #{account},
                    facebook_name = #{nickname},
                </when>
                <when test="accountType ==4">
                    weixin_id = #{account},
                    weixin_name = #{nickname},
                </when>
            </choose>
        </set>
        <where>
            user_id = #{userId}
            <!--<choose>-->
            <!--<when test="accountType ==1">-->
            <!--AND (mobile IS NULL OR mobile = '')-->
            <!--</when>-->
            <!--<when test="accountType ==2">-->
            <!--AND (email IS NULL OR email = '')-->
            <!--</when>-->
            <!--<when test="accountType ==3">-->
            <!--AND (facebook_id IS NULL OR facebook_id = '')-->
            <!--</when>-->
            <!--<when test="accountType ==4">-->
            <!--AND (weixin_id IS NULL OR weixin_id = '')-->
            <!--</when>-->
            <!--</choose>-->
        </where>
    </update>
    <!--解除帐号绑定,如果只有一种帐号类型,就不能绑定-->
    <update id="unbindAccount">
        UPDATE t_user
        <set>
            <choose>
                <when test="accountType ==1">
                    mobile = null,
                </when>
                <when test="accountType ==2">
                    email = null,
                    activate_status = 0,
                    pwd = null,
                </when>
                <when test="accountType ==3">
                    facebook_id = null,
                    facebook_name = null,
                </when>
                <when test="accountType ==4">
                    weixin_id = null,
                    weixin_name = null,
                </when>
            </choose>
        </set>
        <where>
            user_id = #{userId}
            <choose>
                <when test="accountType ==1">
                    AND mobile = #{account}
                </when>
                <when test="accountType ==2">
                    AND email = #{account}
                </when>
                <when test="accountType ==3">
                    AND facebook_id = #{account}
                </when>
                <when test="accountType ==4">
                    AND weixin_id = #{account}
                </when>
            </choose>
        </where>
    </update>

    <!--根据电话号码或者邮箱地址修改密码-->
    <update id="updateAccountPasswordByUserId">
        UPDATE t_user
        SET pwd = #{pwd}
        WHERE user_id = #{userId}
    </update>
    <!-- 用户信息map对象 -->
    <resultMap id="userSimpleInfo" type="com.yf.pet.entity.user.UserSimpleInfo">
        <result column="user_id" property="userId"/>
    </resultMap>

    <!--根据token查询用户信息-->
    <select id="findSimpleUserInfoByToken" resultMap="userSimpleInfo">
        SELECT
        user_id
        FROM t_user
        WHERE access_token = #{accessToken}
    </select>

    <!--邮箱激活修改邮箱地址和激活状态-->
    <update id="updateAccountEmailActivateStatus">
        UPDATE t_user
        <set>
            activate_status = 1,
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="pwd != null and pwd != ''">
                pwd = #{pwd}
            </if>
        </set>
        WHERE user_id = #{userId}
    </update>

</mapper>